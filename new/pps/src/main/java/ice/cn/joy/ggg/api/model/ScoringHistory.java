// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.0

package cn.joy.ggg.api.model;

// <auto-generated>
//
// Generated from file `community.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


public class ScoringHistory implements java.lang.Cloneable, java.io.Serializable
{
    public int count;

    public String content;

    public String time;

    public ScoringHistory()
    {
    }

    public ScoringHistory(int count, String content, String time)
    {
        this.count = count;
        this.content = content;
        this.time = time;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ScoringHistory _r = null;
        try
        {
            _r = (ScoringHistory)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(count != _r.count)
            {
                return false;
            }
            if(content != _r.content && content != null && !content.equals(_r.content))
            {
                return false;
            }
            if(time != _r.time && time != null && !time.equals(_r.time))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        __h = 5 * __h + count;
        if(content != null)
        {
            __h = 5 * __h + content.hashCode();
        }
        if(time != null)
        {
            __h = 5 * __h + time.hashCode();
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(count);
        __os.writeString(content);
        __os.writeString(time);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        count = __is.readInt();
        content = __is.readString();
        time = __is.readString();
    }

    public int getCount() {
      return count;
    }

    public void setCount(int count) {
      this.count = count;
    }

    public String getContent() {
      return content;
    }

    public void setContent(String content) {
      this.content = content;
    }

    public String getTime() {
      return time;
    }

    public void setTime(String time) {
      this.time = time;
    }
}
